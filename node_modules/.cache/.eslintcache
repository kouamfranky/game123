[{"/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/index.js":"1","/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/App.js":"2","/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/reportWebVitals.js":"3","/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/Utils.js":"4"},{"size":547,"mtime":1640936262344,"results":"5","hashOfConfig":"6"},{"size":5829,"mtime":1640972618991,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1640843645578,"results":"8","hashOfConfig":"6"},{"size":205,"mtime":1640956602314,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"178jj6k",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/index.js",[],"/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/App.js",["19","20","21","22","23","24","25","26","27","28"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component } from 'react'\nimport { getRandomColor } from './Utils';\nimport { isElement } from 'react-dom/cjs/react-dom-test-utils.production.min';\n\n\n\nexport default class App extends Component {\n\n  state = {\n    valueSelect: '',\n    testSelect: '',\n    winGame: false,\n    tabValuesGame: [],\n    tabValuesResult: [],\n    testWin: [false, false, false, false, false, false, false, false, false]\n  }\n\n  componentDidMount() {\n    this.ClickNewGame()\n  }\n  ClickNewGame() {\n    let tabGame = []\n    let tabResult = []\n    for (let index = 0; index < 9; index++) {\n      var item = {\n        value: index + 1,\n        color: getRandomColor(),\n      }\n      tabGame.push(item)\n      tabResult.push({ id: index })\n    }\n    this.setState({ tabValuesGame: tabGame, tabValuesResult: tabResult })\n  }\n\n  ClickNumber(item) {\n    this.setState({ testSelect: item.value, valueSelect: item })\n  }\n  ClickNumberResult(item) {\n    console.log(item);\n\n    if (this.state.valueSelect != '' && item.value == undefined) {\n      // console.log(item);\n      //console.log(this.state.valueSelect);\n      let valTabResult = this.state.tabValuesResult\n      let valTabGame = this.state.tabValuesGame\n      valTabResult[item.id] = this.state.valueSelect\n      var indexTabGame = valTabGame.indexOf(this.state.valueSelect)\n      //console.log(s);\n      if (indexTabGame !== -1) {\n        valTabGame.splice(indexTabGame, 1);\n      }\n      //valTabGame.re\n      this.setState({ tabValuesResult: valTabResult, tabValuesGame: valTabGame, valueSelect: '', testSelect: '' })\n\n      if (valTabGame.length == 0) {\n        console.log('oo');\n        //test du resultat final\n        //pour i=0 \n        let tabParcour = [1, 3, 4];\n        this.testResultFinal(0, tabParcour);\n        //pour i=1\n        tabParcour = [0, 2, 3, 4, 5]\n        this.testResultFinal(1, tabParcour);\n        //pour i=2\n        tabParcour = [1, 4, 5]\n        this.testResultFinal(2, tabParcour);\n        //pour i=3\n        tabParcour = [0, 1, 4, 6, 7]\n        this.testResultFinal(3, tabParcour);\n        //pour i=4\n        tabParcour = [0, 1, 2, 3, 5, 6, 7, 8]\n        this.testResultFinal(4, tabParcour);\n        //pour i=5\n        tabParcour = [1, 2, 4, 7, 8]\n        this.testResultFinal(5, tabParcour);\n        //pour i=6\n        tabParcour = [3, 4, 7]\n        this.testResultFinal(6, tabParcour);\n        //pour i=7\n        tabParcour = [3, 4, 5, 6, 8]\n        this.testResultFinal(7, tabParcour);\n        //pour i=8\n        tabParcour = [4, 5, 7]\n        this.testResultFinal(8, tabParcour);\n\n        let winGame = this.state.testWin\n        for (let index = 0; index < winGame.length; index++) {\n          if (winGame[index] == false) {\n            this.setState({ winGame: false })\n            break\n          } else this.setState({ winGame: true })\n        }\n\n        console.log(this.state.testWin);\n\n      }\n    }\n  }\n  testResultFinal(i, tabParcour) {\n    let valTabResult = this.state.tabValuesResult\n    for (let index = 0; index < tabParcour.length; index++) {\n      if (valTabResult[i].value + 1 == valTabResult[tabParcour[index]].value || valTabResult[i].value - 1 == valTabResult[tabParcour[index]].value) {\n        let testWintemp = this.state.testWin;\n        testWintemp[i] = true;\n        this.setState({ testWin: testWintemp });\n      }\n    }\n  }\n  render() {\n    let numberGameComponent = (item) => {\n      return <div className=' btn text-center mb-2'\n        style={{\n          marginRight: \"20px\",\n          height: \"60px\", width: \"60px\", fontSize: \"30px\",\n          backgroundColor: item.color,\n          border: (this.state.testSelect == item.value) ? \"4px dashed black\" : \"\",\n        }}\n        onClick={() => this.ClickNumber(item)}\n      > {item.value} </div>\n    }\n\n    let numberResultComponent = (item) => {\n      return <div id='result' className='result m- d-flex justify-content-center align-items-center rounded '\n        style={{\n          height: \"100px\", width: \"100px\", fontSize: \"35px\",\n          backgroundColor: item.color,\n          boxShadow: \"0 0em 0.28em gray\",\n          // borderColor\n          //border: \"4px dashed black\",\n          marginRight: \"30px\",\n          marginBottom: \"30px\",\n        }}\n        onClick={() => this.ClickNumberResult(item)}\n      > {item.value} </div>\n    }\n\n    return (\n\n      <div className='container mt-3 px-4 '>\n        <div className=' flex-row bg-warning'>\n          <div style={{ fontSize: \"20px\" }} className='mr-4 float-start text-14'>\n            123 Game\n          </div>\n          <button className='btn btn-primary btn-sm float-end' onClick={() => this.ClickNewGame()} > New game </button>\n        </div>\n        <br />\n        <br />\n        <div className='row'>\n          {(this.state.tabValuesGame.length != 0) ?\n            <div className='col-md-6 col-xs-12 col-sm-12'>\n              {\n                this.state.tabValuesGame.map(item => {\n                  return numberGameComponent(item)\n                })\n              }\n              <br />\n              {this.state.tabValuesGame.length} moves left.\n            </div>\n            :\n            (this.state.winGame)? \n            <div className='col-md-6 text-center col-xs-12 col-sm-12'>\n              <img src='win.png' style={{ width: '160px', height: '220px' }} alt=\"win game\" /><br />\n              <span className='display-2'> You win</span>\n            </div>\n            : <span className='col-md-6 col-xs-12 col-sm-12'>Game finished, You lose</span>\n          }\n          <div className='col-md-5 col-12 col-sm-12  row '>\n            {\n              this.state.tabValuesResult.map(item => {\n                return numberResultComponent(item)\n              })\n            }\n          </div>\n          <br />\n\n\n\n\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/reportWebVitals.js",[],"/home/franko/Documents/FRONTEND/WEB/REACT/MY_DASHBOARD/game/src/Utils.js",[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":6,"column":10,"nodeType":"31","messageId":"32","endLine":6,"endColumn":19},{"ruleId":"34","severity":1,"message":"35","line":44,"column":32,"nodeType":"36","messageId":"37","endLine":44,"endColumn":34},{"ruleId":"34","severity":1,"message":"38","line":44,"column":52,"nodeType":"36","messageId":"37","endLine":44,"endColumn":54},{"ruleId":"34","severity":1,"message":"38","line":58,"column":29,"nodeType":"36","messageId":"37","endLine":58,"endColumn":31},{"ruleId":"34","severity":1,"message":"38","line":91,"column":30,"nodeType":"36","messageId":"37","endLine":91,"endColumn":32},{"ruleId":"34","severity":1,"message":"38","line":105,"column":37,"nodeType":"36","messageId":"37","endLine":105,"endColumn":39},{"ruleId":"34","severity":1,"message":"38","line":105,"column":107,"nodeType":"36","messageId":"37","endLine":105,"endColumn":109},{"ruleId":"34","severity":1,"message":"38","line":119,"column":42,"nodeType":"36","messageId":"37","endLine":119,"endColumn":44},{"ruleId":"34","severity":1,"message":"35","line":152,"column":45,"nodeType":"36","messageId":"37","endLine":152,"endColumn":47},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'isElement' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]